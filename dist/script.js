import{io as e}from'https://testingcf.jsdelivr.net/npm/socket.io-client/+esm';import{compare as n}from'https://testingcf.jsdelivr.net/npm/compare-versions/+esm';const t=z.object({url:z.string().default('http://localhost:6620'),delay:z.number().min(0).default(100)}),o={type:'script',script_id:getScriptId()};let r;function s(){return r||(r=t.parse(getVariables(o)),insertVariables(r,o)),r}let a=null;function c(){if(!a){const n=s();a=e(n.url,{transports:['websocket']}),a.on('connect',()=>{console.info('[TavernSync] 成功连接至服务器')}),a.on('connect_error',e=>{console.error(`[TavernSync] 连接服务器出错, 尝试重连! ${e.stack}`)}),a.on('disconnect',(e,n)=>{console.info(`[TavernSync] 与服务器断开连接: ${e}\n${JSON.stringify(n)}`)})}return a}const i=_.debounce(async function(e,n){await createOrReplacePreset(e,n),getLoadedPresetName()===e&&(console.info(getLoadedPresetName(),e),loadPreset(e))},s().delay);const l=_.debounce(async function(e,n){await createOrReplaceWorldbook(e,n)},s().delay);$(async()=>{const e=await getTavernHelperVersion();n(e,'3.4.11','<')&&toastr.error('酒馆助手版本过低, 不能使用酒馆同步脚本, 请更新至 3.4.11 或更高版本'),function(){const e=c();e.on('pull_worldbook',async(e,n)=>{console.info(`[TavernSync] 收到提取世界书 '${e.name}' 的请求`);try{const t=await getWorldbook(e.name);t.forEach(e=>{e.strategy.keys=e.strategy.keys.map(_.toString),e.strategy.keys_secondary.keys=e.strategy.keys_secondary.keys.map(_.toString)}),n(t)}catch(t){const o=t;console.error(`[TavernSync] 提取世界书 '${e.name}' 失败: ${o}`),n(o.message)}}),e.on('push_worldbook',(e,n)=>{console.info(`[TavernSync] 收到推送世界书 '${e.name}' 的请求`),l(e.name,e.data.entries),n()})}(),function(){const e=c();e.on('pull_preset',(e,n)=>{console.info(`[TavernSync] 收到提取预设 '${e.name}' 的请求`);try{n(getPreset(getLoadedPresetName()===e.name?'in_use':e.name))}catch(t){const o=t;console.error(`[TavernSync] 提取预设 '${e.name}' 失败: ${o}`),n(o.message)}}),e.on('push_preset',(e,n)=>{console.info(`[TavernSync] 收到推送预设 '${e.name}' 的请求`),i(e.name,e.data),n()})}()});