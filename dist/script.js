import{io as e}from'https://testingcf.jsdelivr.net/npm/socket.io-client/+esm';import{compare as n}from'https://testingcf.jsdelivr.net/npm/compare-versions/+esm';const o=z.object({url:z.string().default('http://localhost:6620'),delay:z.number().min(0).default(1e3)}),t={type:'script',script_id:getScriptId()};let r;function c(){return r||(r=o.parse(getVariables(t)),insertVariables(r,t)),r}let a=null;function s(){if(!a){const n=c();a=e(n.url,{retries:3}),a.on('connect',()=>{console.info('[TavernSync] 成功连接至服务器')}),a.on('connect_error',e=>{a.active?console.warn(`[TavernSync] 连接服务器出错, 尝试重连! ${e.stack}`):console.error(`[TavernSync] 连接服务器出错, 请手动连接重试! ${e.stack}`)}),a.on('disconnect',(e,n)=>{console.info(`[TavernSync] 与服务器断开连接: ${e}\n${JSON.stringify(n)}`)})}return a}const i=_.debounce(async function(e,n){await createOrReplaceWorldbook(e,n)},c().delay);const l=_.debounce(async function(e,n){await createOrReplacePreset(e,n),getLoadedPresetName()===e&&(console.info(getLoadedPresetName(),e),loadPreset(e))},c().delay);$(async()=>{const e=await getTavernHelperVersion();n(e,'3.4.0','<'),function(){const e=s();e.on('pull_worldbook',async(e,n)=>{console.info(`[TavernSync] 收到提取世界书 '${e.name}' 的请求`);try{n(await getWorldbook(e.name))}catch(o){const t=o;console.error(`[TavernSync] 提取世界书 '${e.name}' 失败: ${t}`),n(t)}}),e.on('push_worldbook',(e,n)=>{console.info(`[TavernSync] 收到推送世界书 '${e.name}' 的请求`),i(e.name,e.data),n()})}(),function(){const e=s();e.on('pull_preset',(e,n)=>{console.info(`[TavernSync] 收到提取预设 '${e.name}' 的请求`);try{n(getPreset(getLoadedPresetName()===e.name?'in_use':e.name))}catch(o){const t=o;console.error(`[TavernSync] 提取预设 '${e.name}' 失败: ${t}`),n(t)}}),e.on('push_preset',(e,n)=>{console.info(`[TavernSync] 收到推送预设 '${e.name}' 的请求`),l(e.name,e.data),n()})}()});